version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: tfjs-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-tfjs_detection}
      MYSQL_USER: ${MYSQL_USER:-tfjs_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-tfjs_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - tfjs-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tfjs-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://${MYSQL_USER:-tfjs_user}:${MYSQL_PASSWORD:-tfjs_password}@mysql:3306/${MYSQL_DATABASE:-tfjs_detection}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - tfjs-network
    volumes:
      - ./uploads:/app/uploads

  # MinIO (S3 兼容存储，可选)
  minio:
    image: minio/minio:latest
    container_name: tfjs-minio
    restart: unless-stopped
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - tfjs-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  tfjs-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  minio_data:
    driver: local

